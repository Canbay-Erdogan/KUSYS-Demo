// <auto-generated />
using System;
using KusysDemo.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KusysDemo.DAL.Migrations
{
    [DbContext(typeof(KusysContext))]
    [Migration("20230312214744_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<string>("CoursesCourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("StudentsStudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CoursesCourseId", "StudentsStudentId");

                    b.HasIndex("StudentsStudentId");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("KusysDemo.Entities.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = "CSI101",
                            CourseName = "Introduction to Computer Science",
                            StudentId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            CourseId = "CSI102",
                            CourseName = "Algorithms",
                            StudentId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            CourseId = "MAT101",
                            CourseName = "Calculus",
                            StudentId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            CourseId = "PHY101",
                            CourseName = "Physics",
                            StudentId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("KusysDemo.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("KusysDemo.Entities.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("85eada75-f85d-400b-aef5-b06c9ba1fc7d"),
                            BirthDate = new DateTime(2002, 3, 13, 0, 47, 44, 732, DateTimeKind.Local).AddTicks(6265),
                            CourseId = "CSI101",
                            FirstName = "Ahmet",
                            LastName = "Boral"
                        },
                        new
                        {
                            StudentId = new Guid("5926176d-941c-4807-9d8b-cd7c350ca93d"),
                            BirthDate = new DateTime(2001, 3, 13, 0, 47, 44, 732, DateTimeKind.Local).AddTicks(6277),
                            CourseId = "CSI102",
                            FirstName = "Mahmut",
                            LastName = "Deniz"
                        },
                        new
                        {
                            StudentId = new Guid("09966f08-8e4a-4848-8809-bda93b6c9481"),
                            BirthDate = new DateTime(2001, 3, 13, 0, 47, 44, 732, DateTimeKind.Local).AddTicks(6280),
                            CourseId = "MAT101",
                            FirstName = "Hakkı",
                            LastName = "Deniz"
                        });
                });

            modelBuilder.Entity("KusysDemo.Entities.StudentCourse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CourseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b5f3a88d-980d-4ada-a7e3-c8ec10f83850"),
                            CourseId = "CSI102",
                            StudentId = new Guid("85eada75-f85d-400b-aef5-b06c9ba1fc7d")
                        },
                        new
                        {
                            Id = new Guid("bb1081b1-ba3c-413d-8103-82bcd55f96ed"),
                            CourseId = "MAT101",
                            StudentId = new Guid("85eada75-f85d-400b-aef5-b06c9ba1fc7d")
                        },
                        new
                        {
                            Id = new Guid("7674a62e-3b11-4b54-a465-9ae79cecd536"),
                            CourseId = "CSI102",
                            StudentId = new Guid("5926176d-941c-4807-9d8b-cd7c350ca93d")
                        },
                        new
                        {
                            Id = new Guid("2052b073-e42d-4a75-81ac-0a932182d320"),
                            CourseId = "MAT101",
                            StudentId = new Guid("5926176d-941c-4807-9d8b-cd7c350ca93d")
                        },
                        new
                        {
                            Id = new Guid("913bccde-2b1b-47e4-a607-335930d41d1c"),
                            CourseId = "PHY101",
                            StudentId = new Guid("09966f08-8e4a-4848-8809-bda93b6c9481")
                        },
                        new
                        {
                            Id = new Guid("d0827021-a9bb-4d1b-bdfa-c67748164456"),
                            CourseId = "MAT101",
                            StudentId = new Guid("09966f08-8e4a-4848-8809-bda93b6c9481")
                        });
                });

            modelBuilder.Entity("KusysDemo.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            FirstName = "Erdogan",
                            LastName = "Canbay",
                            Password = "123",
                            UserName = "Erdogan_Canbay"
                        },
                        new
                        {
                            UserId = 2,
                            FirstName = "Mahmut",
                            LastName = "Bulut",
                            Password = "111",
                            UserName = "Mahmut_Bulut"
                        },
                        new
                        {
                            UserId = 3,
                            FirstName = "Emre",
                            LastName = "Kaya",
                            Password = "1234",
                            UserName = "Emre_Kaya"
                        });
                });

            modelBuilder.Entity("KusysDemo.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            RoleId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("KusysDemo.Entities.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KusysDemo.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KusysDemo.Entities.StudentCourse", b =>
                {
                    b.HasOne("KusysDemo.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("KusysDemo.Entities.Student", "Students")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("KusysDemo.Entities.User", b =>
                {
                    b.HasOne("KusysDemo.Entities.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("KusysDemo.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
